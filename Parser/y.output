Nonterminals useless in grammar

   exp


Terminals unused in grammar

   NUMBER
   IDENTIFIER
   CHAR
   SHORT
   INT
   LONG
   LONG_LONG
   SIGNED
   UNSIGNED
   IF
   ELSE
   WHILE
   RETURN
   CONTINUE
   BREAK
   EQ
   EQEQ
   NEQ
   GT
   LT
   GE
   LE
   OR
   AND
   NOT
   BIT_OR
   BIT_XOR
   BIT_AND
   LSHIFT
   RSHIFT
   PLUS
   MINUS
   MOD
   DIV
   MUL
   INC
   DEC
   MODULO
   PLUSEQ
   MINUSEQ
   MULEQ
   DIVEQ
   MODEQ
   COMMA
   SEMICOLON
   OPEN_PARENTHESIS
   CLOSE_PARENTHESIS
   OPEN_BRACE
   CLOSE_BRACE
   OPEN_SQR_BKT
   CLOSE_SQR_BKT
   SINGLE_LINE
   STRING_CONSTANT
   INTEGER_CONSTANT
   HEXADECIMAL_CONSTANT
   OCTAL_CONSTANT
   FLOATING_CONSTANT


Grammar

    0 $accept: start_state $end

    1 start_state: start_state option
    2            | option

    3 option: preprocessor_directive

    4 preprocessor_directive: INCLUDE
    5                       | DEF


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258)
IDENTIFIER (259)
INCLUDE (260) 4
DEF (261) 5
CHAR (262)
SHORT (263)
INT (264)
LONG (265)
LONG_LONG (266)
SIGNED (267)
UNSIGNED (268)
IF (269)
ELSE (270)
WHILE (271)
RETURN (272)
CONTINUE (273)
BREAK (274)
EQ (275)
EQEQ (276)
NEQ (277)
GT (278)
LT (279)
GE (280)
LE (281)
OR (282)
AND (283)
NOT (284)
BIT_OR (285)
BIT_XOR (286)
BIT_AND (287)
LSHIFT (288)
RSHIFT (289)
PLUS (290)
MINUS (291)
MOD (292)
DIV (293)
MUL (294)
INC (295)
DEC (296)
MODULO (297)
PLUSEQ (298)
MINUSEQ (299)
MULEQ (300)
DIVEQ (301)
MODEQ (302)
COMMA (303)
SEMICOLON (304)
OPEN_PARENTHESIS (305)
CLOSE_PARENTHESIS (306)
OPEN_BRACE (307)
CLOSE_BRACE (308)
OPEN_SQR_BKT (309)
CLOSE_SQR_BKT (310)
SINGLE_LINE (311)
STRING_CONSTANT (312)
INTEGER_CONSTANT (313)
HEXADECIMAL_CONSTANT (314)
OCTAL_CONSTANT (315)
FLOATING_CONSTANT (316)


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
start_state (63)
    on left: 1 2, on right: 0 1
option (64)
    on left: 3, on right: 1 2
preprocessor_directive (65)
    on left: 4 5, on right: 3


State 0

    0 $accept: . start_state $end

    INCLUDE  shift, and go to state 1
    DEF      shift, and go to state 2

    start_state             go to state 3
    option                  go to state 4
    preprocessor_directive  go to state 5


State 1

    4 preprocessor_directive: INCLUDE .

    $default  reduce using rule 4 (preprocessor_directive)


State 2

    5 preprocessor_directive: DEF .

    $default  reduce using rule 5 (preprocessor_directive)


State 3

    0 $accept: start_state . $end
    1 start_state: start_state . option

    $end     shift, and go to state 6
    INCLUDE  shift, and go to state 1
    DEF      shift, and go to state 2

    option                  go to state 7
    preprocessor_directive  go to state 5


State 4

    2 start_state: option .

    $default  reduce using rule 2 (start_state)


State 5

    3 option: preprocessor_directive .

    $default  reduce using rule 3 (option)


State 6

    0 $accept: start_state $end .

    $default  accept


State 7

    1 start_state: start_state option .

    $default  reduce using rule 1 (start_state)
