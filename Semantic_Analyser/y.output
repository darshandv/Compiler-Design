Terminals unused in grammar

   STRING_CONSTANT


State 45 conflicts: 1 shift/reduce
State 49 conflicts: 2 reduce/reduce
State 50 conflicts: 2 reduce/reduce
State 51 conflicts: 2 reduce/reduce
State 54 conflicts: 1 shift/reduce
State 84 conflicts: 3 reduce/reduce
State 85 conflicts: 3 reduce/reduce
State 86 conflicts: 3 reduce/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce


Grammar

    0 $accept: start_state $end

    1 start_state: option start_state
    2            | option

    3 option: function
    4       | declaration
    5       | preprocessor_directive
    6       | comments

    7 preprocessor_directive: INCLUDE
    8                       | DEF

    9 comments: SINGLE_LINE
   10         | MULTI_LINE

   11 function: function_decl
   12         | function_def

   13 function_decl: datatype id OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

   14 $@1: %empty

   15 function_def: datatype id OPEN_PARENTHESIS CLOSE_PARENTHESIS $@1 block_statement

   16 declaration: datatype declaration_list SEMICOLON

   17 declaration_list: declaration_list COMMA decl
   18                 | decl

   19 decl: id
   20     | id OPEN_SQR_BKT arithmetic_exp CLOSE_SQR_BKT
   21     | id OPEN_SQR_BKT int_constant CLOSE_SQR_BKT
   22     | assignment_exp

   23 datatype: sign_extension type
   24         | type

   25 sign_extension: SIGNED
   26               | UNSIGNED

   27 type: INT
   28     | LONG
   29     | SHORT
   30     | CHAR
   31     | LONG_LONG
   32     | FLOAT

   33 assignment_exp: id EQ exp
   34               | id EQ id
   35               | id EQ int_constant
   36               | id EQ float_constant

   37 shorthand_exp: id PLUSEQ assignment_options
   38              | id MINUSEQ assignment_options
   39              | id MULEQ assignment_options
   40              | id DIVEQ assignment_options
   41              | id MODEQ assignment_options

   42 assignment_options: id
   43                   | int_constant
   44                   | float_constant
   45                   | id OPEN_SQR_BKT id CLOSE_SQR_BKT
   46                   | id OPEN_SQR_BKT int_constant CLOSE_SQR_BKT

   47 statement_type: single_statement
   48               | block_statement

   49 single_statement: if_statement
   50                 | while_statement
   51                 | return
   52                 | BREAK SEMICOLON
   53                 | CONTINUE SEMICOLON
   54                 | SEMICOLON
   55                 | function_call SEMICOLON
   56                 | function
   57                 | declaration
   58                 | preprocessor_directive
   59                 | comments
   60                 | assignment_exp SEMICOLON
   61                 | inc_dec_exp SEMICOLON
   62                 | shorthand_exp SEMICOLON

   63 return: RETURN SEMICOLON
   64       | RETURN id SEMICOLON
   65       | RETURN int_constant SEMICOLON
   66       | RETURN arithmetic_exp SEMICOLON

   67 function_call: id OPEN_PARENTHESIS CLOSE_PARENTHESIS

   68 $@2: %empty

   69 block_statement: OPEN_BRACE $@2 statement CLOSE_BRACE

   70 statement: statement statement_type
   71          | %empty

   72 if_statement: IF OPEN_PARENTHESIS exp CLOSE_PARENTHESIS statement_type
   73             | IF OPEN_PARENTHESIS exp CLOSE_PARENTHESIS statement_type ELSE statement_type

   74 $@3: %empty

   75 while_statement: WHILE OPEN_PARENTHESIS exp CLOSE_PARENTHESIS $@3 statement_type

   76 exp: exp_type COMMA exp
   77    | exp_type

   78 exp_type: sub_exp
   79         | binary_exp

   80 sub_exp: sub_exp AND sub_exp
   81        | sub_exp OR sub_exp
   82        | NOT sub_exp
   83        | sub_exp EQEQ sub_exp
   84        | sub_exp NEQ sub_exp
   85        | sub_exp GT sub_exp
   86        | sub_exp LT sub_exp
   87        | sub_exp GE sub_exp
   88        | sub_exp LE sub_exp
   89        | arithmetic_exp

   90 arithmetic_exp: arithmetic_exp PLUS arithmetic_exp
   91               | arithmetic_exp MINUS arithmetic_exp
   92               | arithmetic_exp MUL arithmetic_exp
   93               | arithmetic_exp DIV arithmetic_exp
   94               | assignment_options

   95 binary_exp: binary_exp BIT_AND binary_exp
   96           | binary_exp BIT_OR binary_exp
   97           | binary_exp BIT_XOR binary_exp
   98           | binary_exp LSHIFT binary_exp
   99           | binary_exp RSHIFT binary_exp
  100           | binary_exp MOD binary_exp
  101           | int_constant
  102           | id
  103           | float_constant

  104 inc_dec_exp: INC id
  105            | DEC id
  106            | id INC
  107            | id DEC

  108 int_constant: INTEGER_CONSTANT
  109             | CHARACTER_CONSTANT

  110 float_constant: FLOATING_CONSTANT

  111 id: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 111
INTEGER_CONSTANT (259) 108
FLOATING_CONSTANT (260) 110
STRING_CONSTANT (261)
CHARACTER_CONSTANT (262) 109
CHAR (263) 30
SHORT (264) 29
INT (265) 27
LONG (266) 28
LONG_LONG (267) 31
FLOAT (268) 32
SIGNED (269) 25
UNSIGNED (270) 26
IF (271) 72 73
ELSE (272) 73
WHILE (273) 75
RETURN (274) 63 64 65 66
CONTINUE (275) 53
BREAK (276) 52
EQ (277) 33 34 35 36
EQEQ (278) 83
NEQ (279) 84
GT (280) 85
LT (281) 86
GE (282) 87
LE (283) 88
OR (284) 81
AND (285) 80
NOT (286) 82
BIT_OR (287) 96
BIT_XOR (288) 97
BIT_AND (289) 95
LSHIFT (290) 98
RSHIFT (291) 99
PLUS (292) 90
MINUS (293) 91
MOD (294) 100
DIV (295) 93
MUL (296) 92
INC (297) 104 106
DEC (298) 105 107
PLUSEQ (299) 37
MINUSEQ (300) 38
MULEQ (301) 39
DIVEQ (302) 40
MODEQ (303) 41
COMMA (304) 17 76
SEMICOLON (305) 13 16 52 53 54 55 60 61 62 63 64 65 66
OPEN_PARENTHESIS (306) 13 15 67 72 73 75
CLOSE_PARENTHESIS (307) 13 15 67 72 73 75
OPEN_BRACE (308) 69
CLOSE_BRACE (309) 69
OPEN_SQR_BKT (310) 20 21 45 46
CLOSE_SQR_BKT (311) 20 21 45 46
SINGLE_LINE (312) 9
MULTI_LINE (313) 10
INCLUDE (314) 7
DEF (315) 8
IFX (316)


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
start_state (63)
    on left: 1 2, on right: 0 1
option (64)
    on left: 3 4 5 6, on right: 1 2
preprocessor_directive (65)
    on left: 7 8, on right: 5 58
comments (66)
    on left: 9 10, on right: 6 59
function (67)
    on left: 11 12, on right: 3 56
function_decl (68)
    on left: 13, on right: 11
function_def (69)
    on left: 15, on right: 12
$@1 (70)
    on left: 14, on right: 15
declaration (71)
    on left: 16, on right: 4 57
declaration_list (72)
    on left: 17 18, on right: 16 17
decl (73)
    on left: 19 20 21 22, on right: 17 18
datatype (74)
    on left: 23 24, on right: 13 15 16
sign_extension (75)
    on left: 25 26, on right: 23
type (76)
    on left: 27 28 29 30 31 32, on right: 23 24
assignment_exp (77)
    on left: 33 34 35 36, on right: 22 60
shorthand_exp (78)
    on left: 37 38 39 40 41, on right: 62
assignment_options (79)
    on left: 42 43 44 45 46, on right: 37 38 39 40 41 94
statement_type (80)
    on left: 47 48, on right: 70 72 73 75
single_statement (81)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62, on right: 47
return (82)
    on left: 63 64 65 66, on right: 51
function_call (83)
    on left: 67, on right: 55
block_statement (84)
    on left: 69, on right: 15 48
$@2 (85)
    on left: 68, on right: 69
statement (86)
    on left: 70 71, on right: 69 70
if_statement (87)
    on left: 72 73, on right: 49
while_statement (88)
    on left: 75, on right: 50
$@3 (89)
    on left: 74, on right: 75
exp (90)
    on left: 76 77, on right: 33 72 73 75 76
exp_type (91)
    on left: 78 79, on right: 76 77
sub_exp (92)
    on left: 80 81 82 83 84 85 86 87 88 89, on right: 78 80 81 82 83
    84 85 86 87 88
arithmetic_exp (93)
    on left: 90 91 92 93 94, on right: 20 66 89 90 91 92 93
binary_exp (94)
    on left: 95 96 97 98 99 100 101 102 103, on right: 79 95 96 97
    98 99 100
inc_dec_exp (95)
    on left: 104 105 106 107, on right: 61
int_constant (96)
    on left: 108 109, on right: 21 35 43 46 65 101
float_constant (97)
    on left: 110, on right: 36 44 103
id (98)
    on left: 111, on right: 13 15 19 20 21 33 34 35 36 37 38 39 40
    41 42 45 46 64 67 102 104 105 106 107


State 0

    0 $accept: . start_state $end

    CHAR         shift, and go to state 1
    SHORT        shift, and go to state 2
    INT          shift, and go to state 3
    LONG         shift, and go to state 4
    LONG_LONG    shift, and go to state 5
    FLOAT        shift, and go to state 6
    SIGNED       shift, and go to state 7
    UNSIGNED     shift, and go to state 8
    SINGLE_LINE  shift, and go to state 9
    MULTI_LINE   shift, and go to state 10
    INCLUDE      shift, and go to state 11
    DEF          shift, and go to state 12

    start_state             go to state 13
    option                  go to state 14
    preprocessor_directive  go to state 15
    comments                go to state 16
    function                go to state 17
    function_decl           go to state 18
    function_def            go to state 19
    declaration             go to state 20
    datatype                go to state 21
    sign_extension          go to state 22
    type                    go to state 23


State 1

   30 type: CHAR .

    $default  reduce using rule 30 (type)


State 2

   29 type: SHORT .

    $default  reduce using rule 29 (type)


State 3

   27 type: INT .

    $default  reduce using rule 27 (type)


State 4

   28 type: LONG .

    $default  reduce using rule 28 (type)


State 5

   31 type: LONG_LONG .

    $default  reduce using rule 31 (type)


State 6

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 7

   25 sign_extension: SIGNED .

    $default  reduce using rule 25 (sign_extension)


State 8

   26 sign_extension: UNSIGNED .

    $default  reduce using rule 26 (sign_extension)


State 9

    9 comments: SINGLE_LINE .

    $default  reduce using rule 9 (comments)


State 10

   10 comments: MULTI_LINE .

    $default  reduce using rule 10 (comments)


State 11

    7 preprocessor_directive: INCLUDE .

    $default  reduce using rule 7 (preprocessor_directive)


State 12

    8 preprocessor_directive: DEF .

    $default  reduce using rule 8 (preprocessor_directive)


State 13

    0 $accept: start_state . $end

    $end  shift, and go to state 24


State 14

    1 start_state: option . start_state
    2            | option .

    CHAR         shift, and go to state 1
    SHORT        shift, and go to state 2
    INT          shift, and go to state 3
    LONG         shift, and go to state 4
    LONG_LONG    shift, and go to state 5
    FLOAT        shift, and go to state 6
    SIGNED       shift, and go to state 7
    UNSIGNED     shift, and go to state 8
    SINGLE_LINE  shift, and go to state 9
    MULTI_LINE   shift, and go to state 10
    INCLUDE      shift, and go to state 11
    DEF          shift, and go to state 12

    $default  reduce using rule 2 (start_state)

    start_state             go to state 25
    option                  go to state 14
    preprocessor_directive  go to state 15
    comments                go to state 16
    function                go to state 17
    function_decl           go to state 18
    function_def            go to state 19
    declaration             go to state 20
    datatype                go to state 21
    sign_extension          go to state 22
    type                    go to state 23


State 15

    5 option: preprocessor_directive .

    $default  reduce using rule 5 (option)


State 16

    6 option: comments .

    $default  reduce using rule 6 (option)


State 17

    3 option: function .

    $default  reduce using rule 3 (option)


State 18

   11 function: function_decl .

    $default  reduce using rule 11 (function)


State 19

   12 function: function_def .

    $default  reduce using rule 12 (function)


State 20

    4 option: declaration .

    $default  reduce using rule 4 (option)


State 21

   13 function_decl: datatype . id OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
   15 function_def: datatype . id OPEN_PARENTHESIS CLOSE_PARENTHESIS $@1 block_statement
   16 declaration: datatype . declaration_list SEMICOLON

    IDENTIFIER  shift, and go to state 26

    declaration_list  go to state 27
    decl              go to state 28
    assignment_exp    go to state 29
    id                go to state 30


State 22

   23 datatype: sign_extension . type

    CHAR       shift, and go to state 1
    SHORT      shift, and go to state 2
    INT        shift, and go to state 3
    LONG       shift, and go to state 4
    LONG_LONG  shift, and go to state 5
    FLOAT      shift, and go to state 6

    type  go to state 31


State 23

   24 datatype: type .

    $default  reduce using rule 24 (datatype)


State 24

    0 $accept: start_state $end .

    $default  accept


State 25

    1 start_state: option start_state .

    $default  reduce using rule 1 (start_state)


State 26

  111 id: IDENTIFIER .

    $default  reduce using rule 111 (id)


State 27

   16 declaration: datatype declaration_list . SEMICOLON
   17 declaration_list: declaration_list . COMMA decl

    COMMA      shift, and go to state 32
    SEMICOLON  shift, and go to state 33


State 28

   18 declaration_list: decl .

    $default  reduce using rule 18 (declaration_list)


State 29

   22 decl: assignment_exp .

    $default  reduce using rule 22 (decl)


State 30

   13 function_decl: datatype id . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
   15 function_def: datatype id . OPEN_PARENTHESIS CLOSE_PARENTHESIS $@1 block_statement
   19 decl: id .
   20     | id . OPEN_SQR_BKT arithmetic_exp CLOSE_SQR_BKT
   21     | id . OPEN_SQR_BKT int_constant CLOSE_SQR_BKT
   33 assignment_exp: id . EQ exp
   34               | id . EQ id
   35               | id . EQ int_constant
   36               | id . EQ float_constant

    EQ                shift, and go to state 34
    OPEN_PARENTHESIS  shift, and go to state 35
    OPEN_SQR_BKT      shift, and go to state 36

    $default  reduce using rule 19 (decl)


State 31

   23 datatype: sign_extension type .

    $default  reduce using rule 23 (datatype)


State 32

   17 declaration_list: declaration_list COMMA . decl

    IDENTIFIER  shift, and go to state 26

    decl            go to state 37
    assignment_exp  go to state 29
    id              go to state 38


State 33

   16 declaration: datatype declaration_list SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 34

   33 assignment_exp: id EQ . exp
   34               | id EQ . id
   35               | id EQ . int_constant
   36               | id EQ . float_constant

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    exp                 go to state 44
    exp_type            go to state 45
    sub_exp             go to state 46
    arithmetic_exp      go to state 47
    binary_exp          go to state 48
    int_constant        go to state 49
    float_constant      go to state 50
    id                  go to state 51


State 35

   13 function_decl: datatype id OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON
   15 function_def: datatype id OPEN_PARENTHESIS . CLOSE_PARENTHESIS $@1 block_statement

    CLOSE_PARENTHESIS  shift, and go to state 52


State 36

   20 decl: id OPEN_SQR_BKT . arithmetic_exp CLOSE_SQR_BKT
   21     | id OPEN_SQR_BKT . int_constant CLOSE_SQR_BKT

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 43
    arithmetic_exp      go to state 53
    int_constant        go to state 54
    float_constant      go to state 55
    id                  go to state 56


State 37

   17 declaration_list: declaration_list COMMA decl .

    $default  reduce using rule 17 (declaration_list)


State 38

   19 decl: id .
   20     | id . OPEN_SQR_BKT arithmetic_exp CLOSE_SQR_BKT
   21     | id . OPEN_SQR_BKT int_constant CLOSE_SQR_BKT
   33 assignment_exp: id . EQ exp
   34               | id . EQ id
   35               | id . EQ int_constant
   36               | id . EQ float_constant

    EQ            shift, and go to state 34
    OPEN_SQR_BKT  shift, and go to state 36

    $default  reduce using rule 19 (decl)


State 39

  108 int_constant: INTEGER_CONSTANT .

    $default  reduce using rule 108 (int_constant)


State 40

  110 float_constant: FLOATING_CONSTANT .

    $default  reduce using rule 110 (float_constant)


State 41

  109 int_constant: CHARACTER_CONSTANT .

    $default  reduce using rule 109 (int_constant)


State 42

   82 sub_exp: NOT . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 57
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 43

   94 arithmetic_exp: assignment_options .

    $default  reduce using rule 94 (arithmetic_exp)


State 44

   33 assignment_exp: id EQ exp .

    $default  reduce using rule 33 (assignment_exp)


State 45

   76 exp: exp_type . COMMA exp
   77    | exp_type .

    COMMA  shift, and go to state 59

    COMMA     [reduce using rule 77 (exp)]
    $default  reduce using rule 77 (exp)


State 46

   78 exp_type: sub_exp .
   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp

    EQEQ  shift, and go to state 60
    NEQ   shift, and go to state 61
    GT    shift, and go to state 62
    LT    shift, and go to state 63
    GE    shift, and go to state 64
    LE    shift, and go to state 65
    OR    shift, and go to state 66
    AND   shift, and go to state 67

    $default  reduce using rule 78 (exp_type)


State 47

   89 sub_exp: arithmetic_exp .
   90 arithmetic_exp: arithmetic_exp . PLUS arithmetic_exp
   91               | arithmetic_exp . MINUS arithmetic_exp
   92               | arithmetic_exp . MUL arithmetic_exp
   93               | arithmetic_exp . DIV arithmetic_exp

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    DIV    shift, and go to state 70
    MUL    shift, and go to state 71

    $default  reduce using rule 89 (sub_exp)


State 48

   79 exp_type: binary_exp .
   95 binary_exp: binary_exp . BIT_AND binary_exp
   96           | binary_exp . BIT_OR binary_exp
   97           | binary_exp . BIT_XOR binary_exp
   98           | binary_exp . LSHIFT binary_exp
   99           | binary_exp . RSHIFT binary_exp
  100           | binary_exp . MOD binary_exp

    BIT_OR   shift, and go to state 72
    BIT_XOR  shift, and go to state 73
    BIT_AND  shift, and go to state 74
    LSHIFT   shift, and go to state 75
    RSHIFT   shift, and go to state 76
    MOD      shift, and go to state 77

    $default  reduce using rule 79 (exp_type)


State 49

   35 assignment_exp: id EQ int_constant .
   43 assignment_options: int_constant .
  101 binary_exp: int_constant .

    BIT_OR     reduce using rule 101 (binary_exp)
    BIT_XOR    reduce using rule 101 (binary_exp)
    BIT_AND    reduce using rule 101 (binary_exp)
    LSHIFT     reduce using rule 101 (binary_exp)
    RSHIFT     reduce using rule 101 (binary_exp)
    MOD        reduce using rule 101 (binary_exp)
    COMMA      reduce using rule 35 (assignment_exp)
    COMMA      [reduce using rule 43 (assignment_options)]
    COMMA      [reduce using rule 101 (binary_exp)]
    SEMICOLON  reduce using rule 35 (assignment_exp)
    SEMICOLON  [reduce using rule 43 (assignment_options)]
    SEMICOLON  [reduce using rule 101 (binary_exp)]
    $default   reduce using rule 43 (assignment_options)


State 50

   36 assignment_exp: id EQ float_constant .
   44 assignment_options: float_constant .
  103 binary_exp: float_constant .

    BIT_OR     reduce using rule 103 (binary_exp)
    BIT_XOR    reduce using rule 103 (binary_exp)
    BIT_AND    reduce using rule 103 (binary_exp)
    LSHIFT     reduce using rule 103 (binary_exp)
    RSHIFT     reduce using rule 103 (binary_exp)
    MOD        reduce using rule 103 (binary_exp)
    COMMA      reduce using rule 36 (assignment_exp)
    COMMA      [reduce using rule 44 (assignment_options)]
    COMMA      [reduce using rule 103 (binary_exp)]
    SEMICOLON  reduce using rule 36 (assignment_exp)
    SEMICOLON  [reduce using rule 44 (assignment_options)]
    SEMICOLON  [reduce using rule 103 (binary_exp)]
    $default   reduce using rule 44 (assignment_options)


State 51

   34 assignment_exp: id EQ id .
   42 assignment_options: id .
   45                   | id . OPEN_SQR_BKT id CLOSE_SQR_BKT
   46                   | id . OPEN_SQR_BKT int_constant CLOSE_SQR_BKT
  102 binary_exp: id .

    OPEN_SQR_BKT  shift, and go to state 78

    BIT_OR     reduce using rule 102 (binary_exp)
    BIT_XOR    reduce using rule 102 (binary_exp)
    BIT_AND    reduce using rule 102 (binary_exp)
    LSHIFT     reduce using rule 102 (binary_exp)
    RSHIFT     reduce using rule 102 (binary_exp)
    MOD        reduce using rule 102 (binary_exp)
    COMMA      reduce using rule 34 (assignment_exp)
    COMMA      [reduce using rule 42 (assignment_options)]
    COMMA      [reduce using rule 102 (binary_exp)]
    SEMICOLON  reduce using rule 34 (assignment_exp)
    SEMICOLON  [reduce using rule 42 (assignment_options)]
    SEMICOLON  [reduce using rule 102 (binary_exp)]
    $default   reduce using rule 42 (assignment_options)


State 52

   13 function_decl: datatype id OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON
   15 function_def: datatype id OPEN_PARENTHESIS CLOSE_PARENTHESIS . $@1 block_statement

    SEMICOLON  shift, and go to state 79

    $default  reduce using rule 14 ($@1)

    $@1  go to state 80


State 53

   20 decl: id OPEN_SQR_BKT arithmetic_exp . CLOSE_SQR_BKT
   90 arithmetic_exp: arithmetic_exp . PLUS arithmetic_exp
   91               | arithmetic_exp . MINUS arithmetic_exp
   92               | arithmetic_exp . MUL arithmetic_exp
   93               | arithmetic_exp . DIV arithmetic_exp

    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    DIV            shift, and go to state 70
    MUL            shift, and go to state 71
    CLOSE_SQR_BKT  shift, and go to state 81


State 54

   21 decl: id OPEN_SQR_BKT int_constant . CLOSE_SQR_BKT
   43 assignment_options: int_constant .

    CLOSE_SQR_BKT  shift, and go to state 82

    CLOSE_SQR_BKT  [reduce using rule 43 (assignment_options)]
    $default       reduce using rule 43 (assignment_options)


State 55

   44 assignment_options: float_constant .

    $default  reduce using rule 44 (assignment_options)


State 56

   42 assignment_options: id .
   45                   | id . OPEN_SQR_BKT id CLOSE_SQR_BKT
   46                   | id . OPEN_SQR_BKT int_constant CLOSE_SQR_BKT

    OPEN_SQR_BKT  shift, and go to state 78

    $default  reduce using rule 42 (assignment_options)


State 57

   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   82        | NOT sub_exp .
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp

    $default  reduce using rule 82 (sub_exp)


State 58

   43 assignment_options: int_constant .

    $default  reduce using rule 43 (assignment_options)


State 59

   76 exp: exp_type COMMA . exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    exp                 go to state 83
    exp_type            go to state 45
    sub_exp             go to state 46
    arithmetic_exp      go to state 47
    binary_exp          go to state 48
    int_constant        go to state 84
    float_constant      go to state 85
    id                  go to state 86


State 60

   83 sub_exp: sub_exp EQEQ . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 87
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 61

   84 sub_exp: sub_exp NEQ . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 88
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 62

   85 sub_exp: sub_exp GT . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 89
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 63

   86 sub_exp: sub_exp LT . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 90
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 64

   87 sub_exp: sub_exp GE . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 91
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 65

   88 sub_exp: sub_exp LE . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 92
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 66

   81 sub_exp: sub_exp OR . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 93
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 67

   80 sub_exp: sub_exp AND . sub_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    sub_exp             go to state 94
    arithmetic_exp      go to state 47
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 68

   90 arithmetic_exp: arithmetic_exp PLUS . arithmetic_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 43
    arithmetic_exp      go to state 95
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 69

   91 arithmetic_exp: arithmetic_exp MINUS . arithmetic_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 43
    arithmetic_exp      go to state 96
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 70

   93 arithmetic_exp: arithmetic_exp DIV . arithmetic_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 43
    arithmetic_exp      go to state 97
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 71

   92 arithmetic_exp: arithmetic_exp MUL . arithmetic_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 43
    arithmetic_exp      go to state 98
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 72

   96 binary_exp: binary_exp BIT_OR . binary_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    binary_exp      go to state 99
    int_constant    go to state 100
    float_constant  go to state 101
    id              go to state 102


State 73

   97 binary_exp: binary_exp BIT_XOR . binary_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    binary_exp      go to state 103
    int_constant    go to state 100
    float_constant  go to state 101
    id              go to state 102


State 74

   95 binary_exp: binary_exp BIT_AND . binary_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    binary_exp      go to state 104
    int_constant    go to state 100
    float_constant  go to state 101
    id              go to state 102


State 75

   98 binary_exp: binary_exp LSHIFT . binary_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    binary_exp      go to state 105
    int_constant    go to state 100
    float_constant  go to state 101
    id              go to state 102


State 76

   99 binary_exp: binary_exp RSHIFT . binary_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    binary_exp      go to state 106
    int_constant    go to state 100
    float_constant  go to state 101
    id              go to state 102


State 77

  100 binary_exp: binary_exp MOD . binary_exp

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    binary_exp      go to state 107
    int_constant    go to state 100
    float_constant  go to state 101
    id              go to state 102


State 78

   45 assignment_options: id OPEN_SQR_BKT . id CLOSE_SQR_BKT
   46                   | id OPEN_SQR_BKT . int_constant CLOSE_SQR_BKT

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    CHARACTER_CONSTANT  shift, and go to state 41

    int_constant  go to state 108
    id            go to state 109


State 79

   13 function_decl: datatype id OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .

    $default  reduce using rule 13 (function_decl)


State 80

   15 function_def: datatype id OPEN_PARENTHESIS CLOSE_PARENTHESIS $@1 . block_statement

    OPEN_BRACE  shift, and go to state 110

    block_statement  go to state 111


State 81

   20 decl: id OPEN_SQR_BKT arithmetic_exp CLOSE_SQR_BKT .

    $default  reduce using rule 20 (decl)


State 82

   21 decl: id OPEN_SQR_BKT int_constant CLOSE_SQR_BKT .

    $default  reduce using rule 21 (decl)


State 83

   76 exp: exp_type COMMA exp .

    $default  reduce using rule 76 (exp)


State 84

   43 assignment_options: int_constant .
  101 binary_exp: int_constant .

    BIT_OR             reduce using rule 101 (binary_exp)
    BIT_XOR            reduce using rule 101 (binary_exp)
    BIT_AND            reduce using rule 101 (binary_exp)
    LSHIFT             reduce using rule 101 (binary_exp)
    RSHIFT             reduce using rule 101 (binary_exp)
    MOD                reduce using rule 101 (binary_exp)
    COMMA              reduce using rule 43 (assignment_options)
    COMMA              [reduce using rule 101 (binary_exp)]
    SEMICOLON          reduce using rule 43 (assignment_options)
    SEMICOLON          [reduce using rule 101 (binary_exp)]
    CLOSE_PARENTHESIS  reduce using rule 43 (assignment_options)
    CLOSE_PARENTHESIS  [reduce using rule 101 (binary_exp)]
    $default           reduce using rule 43 (assignment_options)


State 85

   44 assignment_options: float_constant .
  103 binary_exp: float_constant .

    BIT_OR             reduce using rule 103 (binary_exp)
    BIT_XOR            reduce using rule 103 (binary_exp)
    BIT_AND            reduce using rule 103 (binary_exp)
    LSHIFT             reduce using rule 103 (binary_exp)
    RSHIFT             reduce using rule 103 (binary_exp)
    MOD                reduce using rule 103 (binary_exp)
    COMMA              reduce using rule 44 (assignment_options)
    COMMA              [reduce using rule 103 (binary_exp)]
    SEMICOLON          reduce using rule 44 (assignment_options)
    SEMICOLON          [reduce using rule 103 (binary_exp)]
    CLOSE_PARENTHESIS  reduce using rule 44 (assignment_options)
    CLOSE_PARENTHESIS  [reduce using rule 103 (binary_exp)]
    $default           reduce using rule 44 (assignment_options)


State 86

   42 assignment_options: id .
   45                   | id . OPEN_SQR_BKT id CLOSE_SQR_BKT
   46                   | id . OPEN_SQR_BKT int_constant CLOSE_SQR_BKT
  102 binary_exp: id .

    OPEN_SQR_BKT  shift, and go to state 78

    BIT_OR             reduce using rule 102 (binary_exp)
    BIT_XOR            reduce using rule 102 (binary_exp)
    BIT_AND            reduce using rule 102 (binary_exp)
    LSHIFT             reduce using rule 102 (binary_exp)
    RSHIFT             reduce using rule 102 (binary_exp)
    MOD                reduce using rule 102 (binary_exp)
    COMMA              reduce using rule 42 (assignment_options)
    COMMA              [reduce using rule 102 (binary_exp)]
    SEMICOLON          reduce using rule 42 (assignment_options)
    SEMICOLON          [reduce using rule 102 (binary_exp)]
    CLOSE_PARENTHESIS  reduce using rule 42 (assignment_options)
    CLOSE_PARENTHESIS  [reduce using rule 102 (binary_exp)]
    $default           reduce using rule 42 (assignment_options)


State 87

   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   83        | sub_exp . EQEQ sub_exp
   83        | sub_exp EQEQ sub_exp .
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp

    GT  shift, and go to state 62
    LT  shift, and go to state 63
    GE  shift, and go to state 64
    LE  shift, and go to state 65

    $default  reduce using rule 83 (sub_exp)


State 88

   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   84        | sub_exp NEQ sub_exp .
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp

    GT  shift, and go to state 62
    LT  shift, and go to state 63
    GE  shift, and go to state 64
    LE  shift, and go to state 65

    $default  reduce using rule 84 (sub_exp)


State 89

   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   85        | sub_exp GT sub_exp .
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp

    $default  reduce using rule 85 (sub_exp)


State 90

   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   86        | sub_exp LT sub_exp .
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp

    $default  reduce using rule 86 (sub_exp)


State 91

   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   87        | sub_exp GE sub_exp .
   88        | sub_exp . LE sub_exp

    $default  reduce using rule 87 (sub_exp)


State 92

   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp
   88        | sub_exp LE sub_exp .

    $default  reduce using rule 88 (sub_exp)


State 93

   80 sub_exp: sub_exp . AND sub_exp
   81        | sub_exp . OR sub_exp
   81        | sub_exp OR sub_exp .
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp

    EQEQ  shift, and go to state 60
    NEQ   shift, and go to state 61
    GT    shift, and go to state 62
    LT    shift, and go to state 63
    GE    shift, and go to state 64
    LE    shift, and go to state 65
    AND   shift, and go to state 67

    $default  reduce using rule 81 (sub_exp)


State 94

   80 sub_exp: sub_exp . AND sub_exp
   80        | sub_exp AND sub_exp .
   81        | sub_exp . OR sub_exp
   83        | sub_exp . EQEQ sub_exp
   84        | sub_exp . NEQ sub_exp
   85        | sub_exp . GT sub_exp
   86        | sub_exp . LT sub_exp
   87        | sub_exp . GE sub_exp
   88        | sub_exp . LE sub_exp

    EQEQ  shift, and go to state 60
    NEQ   shift, and go to state 61
    GT    shift, and go to state 62
    LT    shift, and go to state 63
    GE    shift, and go to state 64
    LE    shift, and go to state 65

    $default  reduce using rule 80 (sub_exp)


State 95

   90 arithmetic_exp: arithmetic_exp . PLUS arithmetic_exp
   90               | arithmetic_exp PLUS arithmetic_exp .
   91               | arithmetic_exp . MINUS arithmetic_exp
   92               | arithmetic_exp . MUL arithmetic_exp
   93               | arithmetic_exp . DIV arithmetic_exp

    DIV  shift, and go to state 70
    MUL  shift, and go to state 71

    $default  reduce using rule 90 (arithmetic_exp)


State 96

   90 arithmetic_exp: arithmetic_exp . PLUS arithmetic_exp
   91               | arithmetic_exp . MINUS arithmetic_exp
   91               | arithmetic_exp MINUS arithmetic_exp .
   92               | arithmetic_exp . MUL arithmetic_exp
   93               | arithmetic_exp . DIV arithmetic_exp

    DIV  shift, and go to state 70
    MUL  shift, and go to state 71

    $default  reduce using rule 91 (arithmetic_exp)


State 97

   90 arithmetic_exp: arithmetic_exp . PLUS arithmetic_exp
   91               | arithmetic_exp . MINUS arithmetic_exp
   92               | arithmetic_exp . MUL arithmetic_exp
   93               | arithmetic_exp . DIV arithmetic_exp
   93               | arithmetic_exp DIV arithmetic_exp .

    $default  reduce using rule 93 (arithmetic_exp)


State 98

   90 arithmetic_exp: arithmetic_exp . PLUS arithmetic_exp
   91               | arithmetic_exp . MINUS arithmetic_exp
   92               | arithmetic_exp . MUL arithmetic_exp
   92               | arithmetic_exp MUL arithmetic_exp .
   93               | arithmetic_exp . DIV arithmetic_exp

    $default  reduce using rule 92 (arithmetic_exp)


State 99

   95 binary_exp: binary_exp . BIT_AND binary_exp
   96           | binary_exp . BIT_OR binary_exp
   96           | binary_exp BIT_OR binary_exp .
   97           | binary_exp . BIT_XOR binary_exp
   98           | binary_exp . LSHIFT binary_exp
   99           | binary_exp . RSHIFT binary_exp
  100           | binary_exp . MOD binary_exp

    BIT_XOR  shift, and go to state 73
    BIT_AND  shift, and go to state 74
    LSHIFT   shift, and go to state 75
    RSHIFT   shift, and go to state 76
    MOD      shift, and go to state 77

    $default  reduce using rule 96 (binary_exp)


State 100

  101 binary_exp: int_constant .

    $default  reduce using rule 101 (binary_exp)


State 101

  103 binary_exp: float_constant .

    $default  reduce using rule 103 (binary_exp)


State 102

  102 binary_exp: id .

    $default  reduce using rule 102 (binary_exp)


State 103

   95 binary_exp: binary_exp . BIT_AND binary_exp
   96           | binary_exp . BIT_OR binary_exp
   97           | binary_exp . BIT_XOR binary_exp
   97           | binary_exp BIT_XOR binary_exp .
   98           | binary_exp . LSHIFT binary_exp
   99           | binary_exp . RSHIFT binary_exp
  100           | binary_exp . MOD binary_exp

    BIT_AND  shift, and go to state 74
    LSHIFT   shift, and go to state 75
    RSHIFT   shift, and go to state 76
    MOD      shift, and go to state 77

    $default  reduce using rule 97 (binary_exp)


State 104

   95 binary_exp: binary_exp . BIT_AND binary_exp
   95           | binary_exp BIT_AND binary_exp .
   96           | binary_exp . BIT_OR binary_exp
   97           | binary_exp . BIT_XOR binary_exp
   98           | binary_exp . LSHIFT binary_exp
   99           | binary_exp . RSHIFT binary_exp
  100           | binary_exp . MOD binary_exp

    LSHIFT  shift, and go to state 75
    RSHIFT  shift, and go to state 76
    MOD     shift, and go to state 77

    $default  reduce using rule 95 (binary_exp)


State 105

   95 binary_exp: binary_exp . BIT_AND binary_exp
   96           | binary_exp . BIT_OR binary_exp
   97           | binary_exp . BIT_XOR binary_exp
   98           | binary_exp . LSHIFT binary_exp
   98           | binary_exp LSHIFT binary_exp .
   99           | binary_exp . RSHIFT binary_exp
  100           | binary_exp . MOD binary_exp

    MOD  shift, and go to state 77

    $default  reduce using rule 98 (binary_exp)


State 106

   95 binary_exp: binary_exp . BIT_AND binary_exp
   96           | binary_exp . BIT_OR binary_exp
   97           | binary_exp . BIT_XOR binary_exp
   98           | binary_exp . LSHIFT binary_exp
   99           | binary_exp . RSHIFT binary_exp
   99           | binary_exp RSHIFT binary_exp .
  100           | binary_exp . MOD binary_exp

    MOD  shift, and go to state 77

    $default  reduce using rule 99 (binary_exp)


State 107

   95 binary_exp: binary_exp . BIT_AND binary_exp
   96           | binary_exp . BIT_OR binary_exp
   97           | binary_exp . BIT_XOR binary_exp
   98           | binary_exp . LSHIFT binary_exp
   99           | binary_exp . RSHIFT binary_exp
  100           | binary_exp . MOD binary_exp
  100           | binary_exp MOD binary_exp .

    $default  reduce using rule 100 (binary_exp)


State 108

   46 assignment_options: id OPEN_SQR_BKT int_constant . CLOSE_SQR_BKT

    CLOSE_SQR_BKT  shift, and go to state 112


State 109

   45 assignment_options: id OPEN_SQR_BKT id . CLOSE_SQR_BKT

    CLOSE_SQR_BKT  shift, and go to state 113


State 110

   69 block_statement: OPEN_BRACE . $@2 statement CLOSE_BRACE

    $default  reduce using rule 68 ($@2)

    $@2  go to state 114


State 111

   15 function_def: datatype id OPEN_PARENTHESIS CLOSE_PARENTHESIS $@1 block_statement .

    $default  reduce using rule 15 (function_def)


State 112

   46 assignment_options: id OPEN_SQR_BKT int_constant CLOSE_SQR_BKT .

    $default  reduce using rule 46 (assignment_options)


State 113

   45 assignment_options: id OPEN_SQR_BKT id CLOSE_SQR_BKT .

    $default  reduce using rule 45 (assignment_options)


State 114

   69 block_statement: OPEN_BRACE $@2 . statement CLOSE_BRACE

    $default  reduce using rule 71 (statement)

    statement  go to state 115


State 115

   69 block_statement: OPEN_BRACE $@2 statement . CLOSE_BRACE
   70 statement: statement . statement_type

    IDENTIFIER   shift, and go to state 26
    CHAR         shift, and go to state 1
    SHORT        shift, and go to state 2
    INT          shift, and go to state 3
    LONG         shift, and go to state 4
    LONG_LONG    shift, and go to state 5
    FLOAT        shift, and go to state 6
    SIGNED       shift, and go to state 7
    UNSIGNED     shift, and go to state 8
    IF           shift, and go to state 116
    WHILE        shift, and go to state 117
    RETURN       shift, and go to state 118
    CONTINUE     shift, and go to state 119
    BREAK        shift, and go to state 120
    INC          shift, and go to state 121
    DEC          shift, and go to state 122
    SEMICOLON    shift, and go to state 123
    OPEN_BRACE   shift, and go to state 110
    CLOSE_BRACE  shift, and go to state 124
    SINGLE_LINE  shift, and go to state 9
    MULTI_LINE   shift, and go to state 10
    INCLUDE      shift, and go to state 11
    DEF          shift, and go to state 12

    preprocessor_directive  go to state 125
    comments                go to state 126
    function                go to state 127
    function_decl           go to state 18
    function_def            go to state 19
    declaration             go to state 128
    datatype                go to state 21
    sign_extension          go to state 22
    type                    go to state 23
    assignment_exp          go to state 129
    shorthand_exp           go to state 130
    statement_type          go to state 131
    single_statement        go to state 132
    return                  go to state 133
    function_call           go to state 134
    block_statement         go to state 135
    if_statement            go to state 136
    while_statement         go to state 137
    inc_dec_exp             go to state 138
    id                      go to state 139


State 116

   72 if_statement: IF . OPEN_PARENTHESIS exp CLOSE_PARENTHESIS statement_type
   73             | IF . OPEN_PARENTHESIS exp CLOSE_PARENTHESIS statement_type ELSE statement_type

    OPEN_PARENTHESIS  shift, and go to state 140


State 117

   75 while_statement: WHILE . OPEN_PARENTHESIS exp CLOSE_PARENTHESIS $@3 statement_type

    OPEN_PARENTHESIS  shift, and go to state 141


State 118

   63 return: RETURN . SEMICOLON
   64       | RETURN . id SEMICOLON
   65       | RETURN . int_constant SEMICOLON
   66       | RETURN . arithmetic_exp SEMICOLON

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    SEMICOLON           shift, and go to state 142

    assignment_options  go to state 43
    arithmetic_exp      go to state 143
    int_constant        go to state 144
    float_constant      go to state 55
    id                  go to state 145


State 119

   53 single_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 120

   52 single_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 147


State 121

  104 inc_dec_exp: INC . id

    IDENTIFIER  shift, and go to state 26

    id  go to state 148


State 122

  105 inc_dec_exp: DEC . id

    IDENTIFIER  shift, and go to state 26

    id  go to state 149


State 123

   54 single_statement: SEMICOLON .

    $default  reduce using rule 54 (single_statement)


State 124

   69 block_statement: OPEN_BRACE $@2 statement CLOSE_BRACE .

    $default  reduce using rule 69 (block_statement)


State 125

   58 single_statement: preprocessor_directive .

    $default  reduce using rule 58 (single_statement)


State 126

   59 single_statement: comments .

    $default  reduce using rule 59 (single_statement)


State 127

   56 single_statement: function .

    $default  reduce using rule 56 (single_statement)


State 128

   57 single_statement: declaration .

    $default  reduce using rule 57 (single_statement)


State 129

   60 single_statement: assignment_exp . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 130

   62 single_statement: shorthand_exp . SEMICOLON

    SEMICOLON  shift, and go to state 151


State 131

   70 statement: statement statement_type .

    $default  reduce using rule 70 (statement)


State 132

   47 statement_type: single_statement .

    $default  reduce using rule 47 (statement_type)


State 133

   51 single_statement: return .

    $default  reduce using rule 51 (single_statement)


State 134

   55 single_statement: function_call . SEMICOLON

    SEMICOLON  shift, and go to state 152


State 135

   48 statement_type: block_statement .

    $default  reduce using rule 48 (statement_type)


State 136

   49 single_statement: if_statement .

    $default  reduce using rule 49 (single_statement)


State 137

   50 single_statement: while_statement .

    $default  reduce using rule 50 (single_statement)


State 138

   61 single_statement: inc_dec_exp . SEMICOLON

    SEMICOLON  shift, and go to state 153


State 139

   33 assignment_exp: id . EQ exp
   34               | id . EQ id
   35               | id . EQ int_constant
   36               | id . EQ float_constant
   37 shorthand_exp: id . PLUSEQ assignment_options
   38              | id . MINUSEQ assignment_options
   39              | id . MULEQ assignment_options
   40              | id . DIVEQ assignment_options
   41              | id . MODEQ assignment_options
   67 function_call: id . OPEN_PARENTHESIS CLOSE_PARENTHESIS
  106 inc_dec_exp: id . INC
  107            | id . DEC

    EQ                shift, and go to state 34
    INC               shift, and go to state 154
    DEC               shift, and go to state 155
    PLUSEQ            shift, and go to state 156
    MINUSEQ           shift, and go to state 157
    MULEQ             shift, and go to state 158
    DIVEQ             shift, and go to state 159
    MODEQ             shift, and go to state 160
    OPEN_PARENTHESIS  shift, and go to state 161


State 140

   72 if_statement: IF OPEN_PARENTHESIS . exp CLOSE_PARENTHESIS statement_type
   73             | IF OPEN_PARENTHESIS . exp CLOSE_PARENTHESIS statement_type ELSE statement_type

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    exp                 go to state 162
    exp_type            go to state 45
    sub_exp             go to state 46
    arithmetic_exp      go to state 47
    binary_exp          go to state 48
    int_constant        go to state 84
    float_constant      go to state 85
    id                  go to state 86


State 141

   75 while_statement: WHILE OPEN_PARENTHESIS . exp CLOSE_PARENTHESIS $@3 statement_type

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41
    NOT                 shift, and go to state 42

    assignment_options  go to state 43
    exp                 go to state 163
    exp_type            go to state 45
    sub_exp             go to state 46
    arithmetic_exp      go to state 47
    binary_exp          go to state 48
    int_constant        go to state 84
    float_constant      go to state 85
    id                  go to state 86


State 142

   63 return: RETURN SEMICOLON .

    $default  reduce using rule 63 (return)


State 143

   66 return: RETURN arithmetic_exp . SEMICOLON
   90 arithmetic_exp: arithmetic_exp . PLUS arithmetic_exp
   91               | arithmetic_exp . MINUS arithmetic_exp
   92               | arithmetic_exp . MUL arithmetic_exp
   93               | arithmetic_exp . DIV arithmetic_exp

    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    DIV        shift, and go to state 70
    MUL        shift, and go to state 71
    SEMICOLON  shift, and go to state 164


State 144

   43 assignment_options: int_constant .
   65 return: RETURN int_constant . SEMICOLON

    SEMICOLON  shift, and go to state 165

    SEMICOLON  [reduce using rule 43 (assignment_options)]
    $default   reduce using rule 43 (assignment_options)


State 145

   42 assignment_options: id .
   45                   | id . OPEN_SQR_BKT id CLOSE_SQR_BKT
   46                   | id . OPEN_SQR_BKT int_constant CLOSE_SQR_BKT
   64 return: RETURN id . SEMICOLON

    SEMICOLON     shift, and go to state 166
    OPEN_SQR_BKT  shift, and go to state 78

    SEMICOLON  [reduce using rule 42 (assignment_options)]
    $default   reduce using rule 42 (assignment_options)


State 146

   53 single_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 53 (single_statement)


State 147

   52 single_statement: BREAK SEMICOLON .

    $default  reduce using rule 52 (single_statement)


State 148

  104 inc_dec_exp: INC id .

    $default  reduce using rule 104 (inc_dec_exp)


State 149

  105 inc_dec_exp: DEC id .

    $default  reduce using rule 105 (inc_dec_exp)


State 150

   60 single_statement: assignment_exp SEMICOLON .

    $default  reduce using rule 60 (single_statement)


State 151

   62 single_statement: shorthand_exp SEMICOLON .

    $default  reduce using rule 62 (single_statement)


State 152

   55 single_statement: function_call SEMICOLON .

    $default  reduce using rule 55 (single_statement)


State 153

   61 single_statement: inc_dec_exp SEMICOLON .

    $default  reduce using rule 61 (single_statement)


State 154

  106 inc_dec_exp: id INC .

    $default  reduce using rule 106 (inc_dec_exp)


State 155

  107 inc_dec_exp: id DEC .

    $default  reduce using rule 107 (inc_dec_exp)


State 156

   37 shorthand_exp: id PLUSEQ . assignment_options

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 167
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 157

   38 shorthand_exp: id MINUSEQ . assignment_options

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 168
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 158

   39 shorthand_exp: id MULEQ . assignment_options

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 169
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 159

   40 shorthand_exp: id DIVEQ . assignment_options

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 170
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 160

   41 shorthand_exp: id MODEQ . assignment_options

    IDENTIFIER          shift, and go to state 26
    INTEGER_CONSTANT    shift, and go to state 39
    FLOATING_CONSTANT   shift, and go to state 40
    CHARACTER_CONSTANT  shift, and go to state 41

    assignment_options  go to state 171
    int_constant        go to state 58
    float_constant      go to state 55
    id                  go to state 56


State 161

   67 function_call: id OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 172


State 162

   72 if_statement: IF OPEN_PARENTHESIS exp . CLOSE_PARENTHESIS statement_type
   73             | IF OPEN_PARENTHESIS exp . CLOSE_PARENTHESIS statement_type ELSE statement_type

    CLOSE_PARENTHESIS  shift, and go to state 173


State 163

   75 while_statement: WHILE OPEN_PARENTHESIS exp . CLOSE_PARENTHESIS $@3 statement_type

    CLOSE_PARENTHESIS  shift, and go to state 174


State 164

   66 return: RETURN arithmetic_exp SEMICOLON .

    $default  reduce using rule 66 (return)


State 165

   65 return: RETURN int_constant SEMICOLON .

    $default  reduce using rule 65 (return)


State 166

   64 return: RETURN id SEMICOLON .

    $default  reduce using rule 64 (return)


State 167

   37 shorthand_exp: id PLUSEQ assignment_options .

    $default  reduce using rule 37 (shorthand_exp)


State 168

   38 shorthand_exp: id MINUSEQ assignment_options .

    $default  reduce using rule 38 (shorthand_exp)


State 169

   39 shorthand_exp: id MULEQ assignment_options .

    $default  reduce using rule 39 (shorthand_exp)


State 170

   40 shorthand_exp: id DIVEQ assignment_options .

    $default  reduce using rule 40 (shorthand_exp)


State 171

   41 shorthand_exp: id MODEQ assignment_options .

    $default  reduce using rule 41 (shorthand_exp)


State 172

   67 function_call: id OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    $default  reduce using rule 67 (function_call)


State 173

   72 if_statement: IF OPEN_PARENTHESIS exp CLOSE_PARENTHESIS . statement_type
   73             | IF OPEN_PARENTHESIS exp CLOSE_PARENTHESIS . statement_type ELSE statement_type

    IDENTIFIER   shift, and go to state 26
    CHAR         shift, and go to state 1
    SHORT        shift, and go to state 2
    INT          shift, and go to state 3
    LONG         shift, and go to state 4
    LONG_LONG    shift, and go to state 5
    FLOAT        shift, and go to state 6
    SIGNED       shift, and go to state 7
    UNSIGNED     shift, and go to state 8
    IF           shift, and go to state 116
    WHILE        shift, and go to state 117
    RETURN       shift, and go to state 118
    CONTINUE     shift, and go to state 119
    BREAK        shift, and go to state 120
    INC          shift, and go to state 121
    DEC          shift, and go to state 122
    SEMICOLON    shift, and go to state 123
    OPEN_BRACE   shift, and go to state 110
    SINGLE_LINE  shift, and go to state 9
    MULTI_LINE   shift, and go to state 10
    INCLUDE      shift, and go to state 11
    DEF          shift, and go to state 12

    preprocessor_directive  go to state 125
    comments                go to state 126
    function                go to state 127
    function_decl           go to state 18
    function_def            go to state 19
    declaration             go to state 128
    datatype                go to state 21
    sign_extension          go to state 22
    type                    go to state 23
    assignment_exp          go to state 129
    shorthand_exp           go to state 130
    statement_type          go to state 175
    single_statement        go to state 132
    return                  go to state 133
    function_call           go to state 134
    block_statement         go to state 135
    if_statement            go to state 136
    while_statement         go to state 137
    inc_dec_exp             go to state 138
    id                      go to state 139


State 174

   75 while_statement: WHILE OPEN_PARENTHESIS exp CLOSE_PARENTHESIS . $@3 statement_type

    $default  reduce using rule 74 ($@3)

    $@3  go to state 176


State 175

   72 if_statement: IF OPEN_PARENTHESIS exp CLOSE_PARENTHESIS statement_type .
   73             | IF OPEN_PARENTHESIS exp CLOSE_PARENTHESIS statement_type . ELSE statement_type

    ELSE  shift, and go to state 177

    $default  reduce using rule 72 (if_statement)


State 176

   75 while_statement: WHILE OPEN_PARENTHESIS exp CLOSE_PARENTHESIS $@3 . statement_type

    IDENTIFIER   shift, and go to state 26
    CHAR         shift, and go to state 1
    SHORT        shift, and go to state 2
    INT          shift, and go to state 3
    LONG         shift, and go to state 4
    LONG_LONG    shift, and go to state 5
    FLOAT        shift, and go to state 6
    SIGNED       shift, and go to state 7
    UNSIGNED     shift, and go to state 8
    IF           shift, and go to state 116
    WHILE        shift, and go to state 117
    RETURN       shift, and go to state 118
    CONTINUE     shift, and go to state 119
    BREAK        shift, and go to state 120
    INC          shift, and go to state 121
    DEC          shift, and go to state 122
    SEMICOLON    shift, and go to state 123
    OPEN_BRACE   shift, and go to state 110
    SINGLE_LINE  shift, and go to state 9
    MULTI_LINE   shift, and go to state 10
    INCLUDE      shift, and go to state 11
    DEF          shift, and go to state 12

    preprocessor_directive  go to state 125
    comments                go to state 126
    function                go to state 127
    function_decl           go to state 18
    function_def            go to state 19
    declaration             go to state 128
    datatype                go to state 21
    sign_extension          go to state 22
    type                    go to state 23
    assignment_exp          go to state 129
    shorthand_exp           go to state 130
    statement_type          go to state 178
    single_statement        go to state 132
    return                  go to state 133
    function_call           go to state 134
    block_statement         go to state 135
    if_statement            go to state 136
    while_statement         go to state 137
    inc_dec_exp             go to state 138
    id                      go to state 139


State 177

   73 if_statement: IF OPEN_PARENTHESIS exp CLOSE_PARENTHESIS statement_type ELSE . statement_type

    IDENTIFIER   shift, and go to state 26
    CHAR         shift, and go to state 1
    SHORT        shift, and go to state 2
    INT          shift, and go to state 3
    LONG         shift, and go to state 4
    LONG_LONG    shift, and go to state 5
    FLOAT        shift, and go to state 6
    SIGNED       shift, and go to state 7
    UNSIGNED     shift, and go to state 8
    IF           shift, and go to state 116
    WHILE        shift, and go to state 117
    RETURN       shift, and go to state 118
    CONTINUE     shift, and go to state 119
    BREAK        shift, and go to state 120
    INC          shift, and go to state 121
    DEC          shift, and go to state 122
    SEMICOLON    shift, and go to state 123
    OPEN_BRACE   shift, and go to state 110
    SINGLE_LINE  shift, and go to state 9
    MULTI_LINE   shift, and go to state 10
    INCLUDE      shift, and go to state 11
    DEF          shift, and go to state 12

    preprocessor_directive  go to state 125
    comments                go to state 126
    function                go to state 127
    function_decl           go to state 18
    function_def            go to state 19
    declaration             go to state 128
    datatype                go to state 21
    sign_extension          go to state 22
    type                    go to state 23
    assignment_exp          go to state 129
    shorthand_exp           go to state 130
    statement_type          go to state 179
    single_statement        go to state 132
    return                  go to state 133
    function_call           go to state 134
    block_statement         go to state 135
    if_statement            go to state 136
    while_statement         go to state 137
    inc_dec_exp             go to state 138
    id                      go to state 139


State 178

   75 while_statement: WHILE OPEN_PARENTHESIS exp CLOSE_PARENTHESIS $@3 statement_type .

    $default  reduce using rule 75 (while_statement)


State 179

   73 if_statement: IF OPEN_PARENTHESIS exp CLOSE_PARENTHESIS statement_type ELSE statement_type .

    $default  reduce using rule 73 (if_statement)
